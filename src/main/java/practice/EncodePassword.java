package practice;

import java.math.BigInteger;
import java.net.URLEncoder;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Base64;

public class EncodePassword {

    public static void main(String[] args) throws Exception{

        String str = "{\"id\":715,\"custId\":93,\"token\":\"KRIrXMgIlFvvhpaAB6/ZOIcLmu70VxK/4VFwvoJDxug=\"}";
        CharBuffer chars = CharBuffer.wrap(str);
        ByteBuffer utf8Bytes = StandardCharsets.UTF_8.newEncoder().encode(chars); //repack utf8
        CharBuffer utf8Chars = StandardCharsets.UTF_8.newDecoder().decode(utf8Bytes);
        String utf8String = new StringBuffer(utf8Chars).toString();
        System.out.println("utf8String = "+utf8String);

        String s = "PHNhbWxwOlJlc3BvbnNlIElEPSJfNmQ3ODE1NmUtNDNkZi00ZTY5LThhZDItYWQwOTg0MTIzNGIxIiBWZXJzaW9uPSIyLjAiIElzc3VlSW5zdGFudD0iMjAyMi0wNC0xMlQwODo0NTowOS42MjFaIiBEZXN0aW5hdGlvbj0iaHR0cHM6Ly9zLmludGVsbGEuY28vaXBhcmtpbmctc2VydmVyL1NBTUwyL1NTTy9QT1MiIENvbnNlbnQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjb25zZW50OnVuc3BlY2lmaWVkIiBJblJlc3BvbnNlVG89Il9CQjU5MDM1Ni00QTNBLUU0NUEtQjU4MC1BQ0UzMzE2OThEQzciIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiPjxJc3N1ZXIgeG1sbnM9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPmh0dHA6Ly9hZGZzLm50dS5lZHUudHcvYWRmcy9zZXJ2aWNlcy90cnVzdDwvSXNzdWVyPjxzYW1scDpTdGF0dXM+PHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIgLz48L3NhbWxwOlN0YXR1cz48QXNzZXJ0aW9uIElEPSJfMThmNGUxNTktOGIyOC00ZDNiLTg2YjItMThmMDMxOTI2MzliIiBJc3N1ZUluc3RhbnQ9IjIwMjItMDQtMTJUMDg6NDU6MDkuNjIxWiIgVmVyc2lvbj0iMi4wIiB4bWxucz0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI+PElzc3Vlcj5odHRwOi8vYWRmcy5udHUuZWR1LnR3L2FkZnMvc2VydmljZXMvdHJ1c3Q8L0lzc3Vlcj48U2lnbmF0dXJlIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj48U2lnbmVkSW5mbz48Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIgLz48U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxkc2lnLW1vcmUjcnNhLXNoYTI1NiIgLz48UmVmZXJlbmNlIFVSST0iI18xOGY0ZTE1OS04YjI4LTRkM2ItODZiMi0xOGYwMzE5MjYzOWIiPjxUcmFuc2Zvcm1zPjxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIgLz48VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIiAvPjwvVHJhbnNmb3Jtcz48RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2IiAvPjxEaWdlc3RWYWx1ZT4yOEtrNk9UMTI1T3FxTWFQcER2SzhZMWF1VjNINFRqWlpjbmRzNnBFd1B3PTwvRGlnZXN0VmFsdWU+PC9SZWZlcmVuY2U+PC9TaWduZWRJbmZvPjxTaWduYXR1cmVWYWx1ZT5sWUFaRDBzNkthdkRTUFZZUTVIUHhTWjh2cVZyZ3Fqc2lTcStzSGpaWEQ1dVh5Zm9sUkgwWjRhMmdPb3ZlcG5Cam1PN1RYSUU0VmZhRTlTNFB5QmsrbXVvWUh5dEZqY1hjYURKYlJmbHhIcG5mazM0ems2L2NES0E3RmRXYTB3L2N5UHpVei9HREJBVVlwNEJtaktpdE9qN3gveFRQTCt4TTE1eEJKb21mNEdhTW0zdkt3bjZzbDczY1FremVPT2ZIR0pyU2ZwdW50TjJHZjNsMzdDZlhDZWIxQjdBcGhaVTZ1UnpPSmQxdXNkdWxvZ2xUYS8rMTF4Tks5T1VTcktlSnRQb3YwZkM0VENlV0l1Rzg0cUZ4eGpWbmtwZTBnMTNDamk4MC9KY0dScytHZUEzU1JuRnhmN0FhbzNpR1IwVUpqNjlLSWMxK3kyZThIa3NuTXBzbFE9PTwvU2lnbmF0dXJlVmFsdWU+PEtleUluZm8+PGRzOlg1MDlEYXRhIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj48ZHM6WDUwOUNlcnRpZmljYXRlPk1JSUczRENDQmNTZ0F3SUJBZ0lRUitRQUFBQUNLWTFTbjVEQXFWK3YrakFOQmdrcWhraUc5dzBCQVFzRkFEQnZNUXN3Q1FZRFZRUUdFd0pVVnpFU01CQUdBMVVFQ2hNSlZFRkpWMEZPTFVOQk1Sb3dHQVlEVlFRTEV4RlRaV04xY21VZ1UxTk1JRk4xWWkxRFFURXdNQzRHQTFVRUF4TW5WRmREUVNCVFpXTjFjbVVnVTFOTUlFTmxjblJwWm1sallYUnBiMjRnUVhWMGFHOXlhWFI1TUI0WERUSXdNRGN4TmpBeU5EY3hNRm9YRFRJeU1UQXdNakUxTlRrMU9Wb3dnYU14Q3pBSkJnTlZCQVlUQWxSWE1ROHdEUVlEVlFRSUV3WlVZV2wzWVc0eER6QU5CZ05WQkFjVEJsUmhhWEJsYVRFak1DRUdBMVVFQ2hNYVRtRjBhVzl1WVd3Z1ZHRnBkMkZ1SUZWdWFYWmxjbk5wZEhreE16QXhCZ05WQkFzVEtrTnZiWEIxZEdWeUlHRnVaQ0JKYm1admNtMWhkR2x2YmlCT1pYUjNiM0pyYVc1bklFTmxiblJsY2pFWU1CWUdBMVVFQXhNUFlXUm1jeTV1ZEhVdVpXUjFMblIzTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFyOEVlZ1dLN2lBdzJWMSs3UjZhYys0Y2NDZVcvMzBoaXQ1OWRFY0QvcnZpQVZOcDIrTytKamJCNE4zVnpwZmdkY3VmeTJXTzNmSVVnRlJJVEd5aDhJUFNjVDRHSDRKWURjT0p2WDhrWC9iTGRScm94UlhJT2xLNERTajJDbDl2YUtmNElUc2JOT3BwcVlXMkJaWGxMQTB5TkpxRCtDN2VqWlZUVUxPVjhsZHVLdXh6UEd3T3JyNmQxRGU0WXIwclgyN2dFY1lpaXZqbkxmQmpjVi8ycElWenp5TWxOTk5DS3g0cWI1SFNQbE5oNStUUjljeng2dDFvdEkzbUZTTGEzSktYNGVtVGx1NnhDTk05Qk04bE5YL04yOWMyWXJQSDlHTjdjTWdONHhjU0w2a1ptZGVweFFESlY3NDRqdnJFeG51N3ROeFlVRks5eVlCeEhraGJVNVFJREFRQUJvNElEUFRDQ0F6a3dId1lEVlIwakJCZ3dGb0FVK0FmQ2FDVC9oWlhMMng3ak01d3FUNWNnVm5zd0tRWURWUjBPQkNJRUlJc0FTMFhnTFVxeGFVdHIxTS95N1NSVlpIRkZTTTVkZ1FzcU5xdHdVcWZtTUZZR0ExVWRId1JQTUUwd1M2QkpvRWVHUldoMGRIQTZMeTl6YzJ4elpYSjJaWEl1ZEhkallTNWpiMjB1ZEhjdmMzTnNjMlZ5ZG1WeUwxTmxZM1Z5WlhOemJGOXlaWFp2YTJWZmMyaGhNbDh5TURFMExtTnliREFhQmdOVkhSRUVFekFSZ2c5aFpHWnpMbTUwZFM1bFpIVXVkSGN3Z1lFR0NDc0dBUVVGQndFQkJIVXdjekJFQmdnckJnRUZCUWN3QW9ZNGFIUjBjRG92TDNOemJITmxjblpsY2k1MGQyTmhMbU52YlM1MGR5OWpZV05sY25RdmMyVmpkWEpsWDNOb1lUSmZNakF4TkM1amNuUXdLd1lJS3dZQkJRVUhNQUdHSDJoMGRIQTZMeTkwZDJOaGMzTnNiMk56Y0M1MGQyTmhMbU52YlM1MGR5OHdOd1lEVlIwZ0JEQXdMakFzQmdzckJnRUVBWUsvSlFFQkdUQWRNQnNHQ0NzR0FRVUZCd0lCRmc5M2QzY3VkSGRqWVM1amIyMHVkSGN3Q1FZRFZSMFRCQUl3QURBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01JSUJmZ1lLS3dZQkJBSFdlUUlFQWdTQ0FXNEVnZ0ZxQVdnQWRnQlZnZFRDRnBBMkFVcnFDNXRYUEZQd3dPUTRlSEFsQ0Jjdm82b2RCeFBUREFBQUFYTlZoTVE0QUFBRUF3QkhNRVVDSVFEcytoRHBhUzVlZUlCVHRvRkV5UHB2VElGYURweUhJZDd1cXNyZnh1VHZkd0lnQ01ZRng5UjBnWmdlOUJNTDVPOHJELzdvWnM2dzhqdG55ZjcwN2N3K1d3Z0FkZ0FwZWI3d25qazVJZkJXYzU5anBYZmx2bGQ5bkdBSytQbE5YU1pjSlYzSGhBQUFBWE5WaE1HckFBQUVBd0JITUVVQ0lRRHpkdXdEdGJ1QjZyVFZvalVKTk9NdElMMTlZZ2NJRjA1Tit4M1lpKzRjc2dJZ0Y0NWUvajNxMythY01GaFRXUGJodGtpeG9lL2VhYktyWlFUYjZEdU9kSWtBZGdBaVJVVUhXVlVrVnBZL29TL3g5MjJHNENNbVk2M0FTMzlkeG9OY2J1SVBBZ0FBQVhOVmhNT0NBQUFFQXdCSE1FVUNJUUNTYVdxOURGMVRSUUFDQW03cUl0Tk1xT3lTS2N6R3psa0FKTjFIWVNzejJBSWdYRVA1QnMwcnRBV2lqVnkwTzAwTmxUdVNkN3VneFduZXBrTmE4OEFlamhrd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEQWYwQzZzcjJGNHhZUVdMMjgxNW1QbExzSUtDUlNMRWZoeVZaMVBReEFoV3U2R25tUmhlNENTUXRzRGU1bTBUSUlXdU1oa0lKdWI1L1VIdlNQNEgrK0tNbGoyYmN2cSt0cjRsZFlDS3Z4cnp4cHUzZXhLQmVEWHFBMmR6dXlkNDc2TmVUWDZuZFFkbXJvK1ZEYU5CYVJNcFd0UlJ6RVU4TW4wNmxoZ282U0dmWjhuZTY5c2FBQ2VuNTBtcGV5a2cxSEJwaWpmclJGMm5HTGNNcm54QjkvMW1sZG00ZjRRUk1kbXBBb1dtcXFFNGJiZVJKd0luVlhjMmQzdkxpbFdYR3luR3Z5NWt5NG5MZDFLZmRaSDdmOWw5c1cyOUlqYlRtamFmSGI5TG9sb0ZETjVHZDVFYm03WHp0UDBtdElWQjdJcXNsMHdMd2lZWEVUTlNybjk4VzQ9PC9kczpYNTA5Q2VydGlmaWNhdGU+PC9kczpYNTA5RGF0YT48L0tleUluZm8+PC9TaWduYXR1cmU+PFN1YmplY3Q+PFN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj48U3ViamVjdENvbmZpcm1hdGlvbkRhdGEgSW5SZXNwb25zZVRvPSJfQkI1OTAzNTYtNEEzQS1FNDVBLUI1ODAtQUNFMzMxNjk4REM3IiBOb3RPbk9yQWZ0ZXI9IjIwMjItMDQtMTJUMDg6NTA6MDkuNjIxWiIgUmVjaXBpZW50PSJodHRwczovL3MuaW50ZWxsYS5jby9pcGFya2luZy1zZXJ2ZXIvU0FNTDIvU1NPL1BPUyIgLz48L1N1YmplY3RDb25maXJtYXRpb24+PC9TdWJqZWN0PjxDb25kaXRpb25zIE5vdEJlZm9yZT0iMjAyMi0wNC0xMlQwODo0NTowOS42MjFaIiBOb3RPbk9yQWZ0ZXI9IjIwMjItMDQtMTJUMDk6NDU6MDkuNjIxWiI+PEF1ZGllbmNlUmVzdHJpY3Rpb24+PEF1ZGllbmNlPmh0dHBzOi8vcy5pbnRlbGxhLmNvL2lwYXJraW5nLXNlcnZlci88L0F1ZGllbmNlPjwvQXVkaWVuY2VSZXN0cmljdGlvbj48L0NvbmRpdGlvbnM+PEF0dHJpYnV0ZVN0YXRlbWVudD48QXR0cmlidXRlIE5hbWU9Imh0dHA6Ly93d3cubnR1LmVkdS50dy9FbWFpbCI+PEF0dHJpYnV0ZVZhbHVlPndqdDA4MjRAbnR1LmVkdS50dzwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJodHRwOi8vd3d3Lm50dS5lZHUudHcvU0VRIj48QXR0cmlidXRlVmFsdWU+MTQyMmE8L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iaHR0cDovL3d3dy5udHUuZWR1LnR3L0FjY291bnROYW1lIj48QXR0cmlidXRlVmFsdWU+d2p0MDgyNDwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJodHRwOi8vd3d3Lm50dS5lZHUudHcvQWNjb3VudFR5cGVDb2RlIj48QXR0cmlidXRlVmFsdWU+czwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJodHRwOi8vd3d3Lm50dS5lZHUudHcvQWNjb3VudFN0YXR1c0NvZGUiPjxBdHRyaWJ1dGVWYWx1ZT4wPC9BdHRyaWJ1dGVWYWx1ZT48L0F0dHJpYnV0ZT48QXR0cmlidXRlIE5hbWU9Imh0dHA6Ly93d3cubnR1LmVkdS50dy9VTklUQSI+PEF0dHJpYnV0ZVZhbHVlPue4veWLmeiZlTwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJodHRwOi8vd3d3Lm50dS5lZHUudHcvVU5JVEIiPjxBdHRyaWJ1dGVWYWx1ZT7kuovli5nntYQ8L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iaHR0cDovL3d3dy5udHUuZWR1LnR3L3RpdGxlIj48QXR0cmlidXRlVmFsdWU+6KWE55CGPC9BdHRyaWJ1dGVWYWx1ZT48L0F0dHJpYnV0ZT48QXR0cmlidXRlIE5hbWU9Imh0dHA6Ly93d3cubnR1LmVkdS50dy9DaGluZXNlTmFtZSI+PEF0dHJpYnV0ZVZhbHVlPuitmueRi+WEkjwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PC9BdHRyaWJ1dGVTdGF0ZW1lbnQ+PEF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD0iMjAyMi0wNC0xMlQwODo0NTowOS40ODBaIj48QXV0aG5Db250ZXh0PjxBdXRobkNvbnRleHRDbGFzc1JlZj51cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3NlczpQYXNzd29yZFByb3RlY3RlZFRyYW5zcG9ydDwvQXV0aG5Db250ZXh0Q2xhc3NSZWY+PC9BdXRobkNvbnRleHQ+PC9BdXRoblN0YXRlbWVudD48L0Fzc2VydGlvbj48L3NhbWxwOlJlc3BvbnNlPg==";
        byte[] rawData = Base64.getDecoder().decode(s);
        System.out.println("decode = \n" + new String(rawData, StandardCharsets.UTF_8));

        String xml = "<samlp:Response ID=\"_6d78156e-43df-4e69-8ad2-ad09841234b1\" Version=\"2.0\" IssueInstant=\"2022-04-12T08:45:09.621Z\" Destination=\"https://s.intella.co/iparking-server/SAML2/SSO/POS\" Consent=\"urn:oasis:names:tc:SAML:2.0:consent:unspecified\" InResponseTo=\"_BB590356-4A3A-E45A-B580-ACE331698DC7\" xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\"><Issuer xmlns=\"urn:oasis:names:tc:SAML:2.0:assertion\">http://adfs.ntu.edu.tw/adfs/services/trust</Issuer><samlp:Status><samlp:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Success\" /></samlp:Status><Assertion ID=\"_18f4e159-8b28-4d3b-86b2-18f03192639b\" IssueInstant=\"2022-04-12T08:45:09.621Z\" Version=\"2.0\" xmlns=\"urn:oasis:names:tc:SAML:2.0:assertion\"><Issuer>http://adfs.ntu.edu.tw/adfs/services/trust</Issuer><mainTest.test.Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\"><SignedInfo><CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" /><SignatureMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\" /><Reference URI=\"#_18f4e159-8b28-4d3b-86b2-18f03192639b\"><Transforms><Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" /><Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" /></Transforms><DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\" /><DigestValue>28Kk6OT125OqqMaPpDvK8Y1auV3H4TjZZcnds6pEwPw=</DigestValue></Reference></SignedInfo><SignatureValue>lYAZD0s6KavDSPVYQ5HPxSZ8vqVrgqjsiSq+sHjZXD5uXyfolRH0Z4a2gOovepnBjmO7TXIE4VfaE9S4PyBk+muoYHytFjcXcaDJbRflxHpnfk34zk6/cDKA7FdWa0w/cyPzUz/GDBAUYp4BmjKitOj7x/xTPL+xM15xBJomf4GaMm3vKwn6sl73cQkzeOOfHGJrSfpuntN2Gf3l37CfXCeb1B7AphZU6uRzOJd1usduloglTa/+11xNK9OUSrKeJtPov0fC4TCeWIuG84qFxxjVnkpe0g13Cji80/JcGRs+GeA3SRnFxf7Aao3iGR0UJj69KIc1+y2e8HksnMpslQ==</SignatureValue><KeyInfo><ds:X509Data xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\"><ds:X509Certificate>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</ds:X509Certificate></ds:X509Data></KeyInfo></mainTest.test.Signature><Subject><SubjectConfirmation Method=\"urn:oasis:names:tc:SAML:2.0:cm:bearer\"><SubjectConfirmationData InResponseTo=\"_BB590356-4A3A-E45A-B580-ACE331698DC7\" NotOnOrAfter=\"2022-04-12T08:50:09.621Z\" Recipient=\"https://s.intella.co/iparking-server/SAML2/SSO/POS\" /></SubjectConfirmation></Subject><Conditions NotBefore=\"2022-04-12T08:45:09.621Z\" NotOnOrAfter=\"2022-04-12T09:45:09.621Z\"><AudienceRestriction><Audience>https://s.intella.co/iparking-server/</Audience></AudienceRestriction></Conditions><AttributeStatement><Attribute Name=\"http://www.ntu.edu.tw/Email\"><AttributeValue>wjt0824@ntu.edu.tw</AttributeValue></Attribute><Attribute Name=\"http://www.ntu.edu.tw/SEQ\"><AttributeValue>1422a</AttributeValue></Attribute><Attribute Name=\"http://www.ntu.edu.tw/AccountName\"><AttributeValue>wjt0824</AttributeValue></Attribute><Attribute Name=\"http://www.ntu.edu.tw/AccountTypeCode\"><AttributeValue>s</AttributeValue></Attribute><Attribute Name=\"http://www.ntu.edu.tw/AccountStatusCode\"><AttributeValue>0</AttributeValue></Attribute><Attribute Name=\"http://www.ntu.edu.tw/UNITA\"><AttributeValue>總務處</AttributeValue></Attribute><Attribute Name=\"http://www.ntu.edu.tw/UNITB\"><AttributeValue>事務組</AttributeValue></Attribute><Attribute Name=\"http://www.ntu.edu.tw/title\"><AttributeValue>襄理</AttributeValue></Attribute><Attribute Name=\"http://www.ntu.edu.tw/ChineseName\"><AttributeValue>譚瑋儒</AttributeValue></Attribute></AttributeStatement><AuthnStatement AuthnInstant=\"2022-04-12T08:45:09.480Z\"><AuthnContext><AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</AuthnContextClassRef></AuthnContext></AuthnStatement></Assertion></samlp:Response>";
        System.out.println("encode = \n"+Base64.getEncoder().encodeToString(xml.getBytes(StandardCharsets.UTF_8)));

        String password = "123qweasd";
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] sha256 = md.digest(password.getBytes());
            BigInteger bigInteger = new BigInteger(1, sha256);
            String hex = String.format("%x", bigInteger);
            String hex2 = "";
            for (byte b : sha256) {
                String st = String.format("%02X", b);
                hex2 += st;
            }
            String base64String = Base64.getEncoder().encodeToString(sha256);
            String  urlString = URLEncoder.encode(base64String, StandardCharsets.UTF_8.name());
            System.out.println("bigInteger = \n" + bigInteger);
            System.out.println("-----------------------------------------------------------");
            System.out.println("hex(s2p_Pin) = \n" + hex);
            System.out.println("hex2 = \n"+hex2.toLowerCase());
            System.out.println("-----------------------------------------------------------");
            System.out.println("base64(iParking_secretCode) = \n" + base64String);
            System.out.println("-----------------------------------------------------------");
            System.out.println("url(iParking_secretCode) = \n" + urlString);
//            System.out.println(""+Base64.getEncoder().encodeToString(hex.getBytes()));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
